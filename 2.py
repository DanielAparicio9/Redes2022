#--------------------------Librerias--------------------------------------------
import numpy as np
import scipy as sp
import scipy.linalg as linalg
import matplotlib.pyplot as plt
import math
#------------------------------------------------------------------------------


#---------------------------------Valores Iniciales------------------------------------
tau = 10 #ms
E = -65 #mV
R=10 #Mohm
Ie=2#nA
V0 = -65 #mV
#-------------------------------------------------------------------------------------



#--------------------------------Función con Corriente ------------------------------------------------
def VV(t):
    return V0*(np.exp(-t/tau))+(E+R*Ie)*(1-np.exp(-t/tau))
#------------------------------------------------------------------------------------------------------


#---------------------------------------Grafica--------------------------------------------------------
valores_t=np.linspace(0,200,4000)
valores_V=np.vectorize(VV)(valores_t)
plt.plot(valores_t,valores_V,label="V(t)",linestyle='-',c='yellow')
plt.title('Integrate and Fire: Con corriente, Sin Disparo')
plt.legend()
plt.xlabel('$t$ [ms]')
plt.ylabel('$V(t)$ [mV]')
#-----------------------------------------------------------------------------------------------------

#---------------------------------Valores Iniciales------------------------------------
tau = 10 #ms
E = -65 #mV
R=10 #Mohm
Ie=2#nA
V0 = -65 #mV
#-------------------------------------------------------------------------------------


#--------------------Función Rk4----------------------------------------
def rk4(f,x,t,h,p):
    k1 = f(x,t,p)
    k2 = f(x+0.5*h*k1,t+0.5*h,p)
    k3 = f(x+0.5*h*k2,t+0.5*h,p)
    k4 = f(x+h*k3,t+h,p)
    return h*(k1+2.0*k2+2.0*k3+k4)/6.0
#-----------------------------------------------------------------------

#--------------------------------Función con Corriente -----------------------------------------------
def V(t,v,p):
    return (1/tau)*(E-v+R*Ie)
#------------------------------------------------------------------------------------------------------

#-----------------------Condiciones Iniciales------------------------------------------------------------
h=0.05 #ms
t = np.zeros(4001)
v1 = np.zeros(len(t))
t[0]=0#s
v1[0]=V0
k=4000
#-------------------------------------------------------------------------------------------------------

#----------------------------------------Simulación---------------------------------------------------
for i in range(k): 
    v1[i+1]=v1[i]+rk4(V,t[i],v1[i],h,1)
    t[i+1]=t[i]+h
#-----------------------------------------------------------------------------------------------------

#--------------------------------------Comparación para un mismo tiempo--------------------------------
print(t[200],v1[200],VV(t[200]))
print("Diferencia valores:", v1[200]-VV(t[200]))
#------------------------------------------------------------------------------------------------------

#---------------------------------------Grafica--------------------------------------------------------
plt.plot(t,v1,label="V(t)",linestyle='--',c='blue')
plt.title('Integrate and Fire: Con corriente, Sin Disparo')
plt.legend()
plt.xlabel('$t$ [ms]')
plt.ylabel('$V(t)$ [mV]')
plt.show()
#-----------------------------------------------------------------------------------------------------